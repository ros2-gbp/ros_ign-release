%bcond_without tests
%bcond_without weak_deps

%global __os_install_post %(echo '%{__os_install_post}' | sed -e 's!/usr/lib[^[:space:]]*/brp-python-bytecompile[[:space:]].*$!!g')
%global __provides_exclude_from ^/opt/ros/rolling/.*$
%global __requires_exclude_from ^/opt/ros/rolling/.*$

Name:           ros-rolling-ros-gz-sim-demos
Version:        3.0.3
Release:        1%{?dist}%{?release_suffix}
Summary:        ROS ros_gz_sim_demos package

License:        Apache 2.0
Source0:        %{name}-%{version}.tar.gz

Requires:       ros-rolling-gz-sim-vendor
Requires:       ros-rolling-image-transport-plugins
Requires:       ros-rolling-robot-state-publisher
Requires:       ros-rolling-ros-gz-bridge
Requires:       ros-rolling-ros-gz-image
Requires:       ros-rolling-ros-gz-sim
Requires:       ros-rolling-rqt-image-view
Requires:       ros-rolling-rqt-plot
Requires:       ros-rolling-rqt-topic
Requires:       ros-rolling-rviz-imu-plugin
Requires:       ros-rolling-rviz2
Requires:       ros-rolling-sdformat-urdf
Requires:       ros-rolling-tf2-ros
Requires:       ros-rolling-xacro
Requires:       ros-rolling-ros-workspace
BuildRequires:  ros-rolling-ament-cmake
BuildRequires:  ros-rolling-gz-sim-vendor
BuildRequires:  ros-rolling-ros-workspace
Provides:       %{name}-devel = %{version}-%{release}
Provides:       %{name}-doc = %{version}-%{release}
Provides:       %{name}-runtime = %{version}-%{release}

%if 0%{?with_tests}
BuildRequires:  ros-rolling-ament-lint-auto
BuildRequires:  ros-rolling-ament-lint-common
%endif

%description
Demos using Gazebo Sim simulation with ROS.

%prep
%autosetup -p1

%build
# In case we're installing to a non-standard location, look for a setup.sh
# in the install tree and source it.  It will set things like
# CMAKE_PREFIX_PATH, PKG_CONFIG_PATH, and PYTHONPATH.
if [ -f "/opt/ros/rolling/setup.sh" ]; then . "/opt/ros/rolling/setup.sh"; fi
mkdir -p .obj-%{_target_platform} && cd .obj-%{_target_platform}
%cmake3 \
    -UINCLUDE_INSTALL_DIR \
    -ULIB_INSTALL_DIR \
    -USYSCONF_INSTALL_DIR \
    -USHARE_INSTALL_PREFIX \
    -ULIB_SUFFIX \
    -DCMAKE_INSTALL_PREFIX="/opt/ros/rolling" \
    -DAMENT_PREFIX_PATH="/opt/ros/rolling" \
    -DCMAKE_PREFIX_PATH="/opt/ros/rolling" \
    -DSETUPTOOLS_DEB_LAYOUT=OFF \
%if !0%{?with_tests}
    -DBUILD_TESTING=OFF \
%endif
    ..

%make_build

%install
# In case we're installing to a non-standard location, look for a setup.sh
# in the install tree and source it.  It will set things like
# CMAKE_PREFIX_PATH, PKG_CONFIG_PATH, and PYTHONPATH.
if [ -f "/opt/ros/rolling/setup.sh" ]; then . "/opt/ros/rolling/setup.sh"; fi
%make_install -C .obj-%{_target_platform}

%if 0%{?with_tests}
%check
# Look for a Makefile target with a name indicating that it runs tests
TEST_TARGET=$(%__make -qp -C .obj-%{_target_platform} | sed "s/^\(test\|check\):.*/\\1/;t f;d;:f;q0")
if [ -n "$TEST_TARGET" ]; then
# In case we're installing to a non-standard location, look for a setup.sh
# in the install tree and source it.  It will set things like
# CMAKE_PREFIX_PATH, PKG_CONFIG_PATH, and PYTHONPATH.
if [ -f "/opt/ros/rolling/setup.sh" ]; then . "/opt/ros/rolling/setup.sh"; fi
CTEST_OUTPUT_ON_FAILURE=1 \
    %make_build -C .obj-%{_target_platform} $TEST_TARGET || echo "RPM TESTS FAILED"
else echo "RPM TESTS SKIPPED"; fi
%endif

%files
/opt/ros/rolling

%changelog
* Wed Jul 02 2025 Aditya Pande <adityapande@intrinsic.ai> - 3.0.3-1
- Autogenerated by Bloom

* Thu Jun 12 2025 Aditya Pande <adityapande@intrinsic.ai> - 3.0.2-1
- Autogenerated by Bloom

* Mon May 26 2025 Aditya Pande <adityapande@intrinsic.ai> - 3.0.1-1
- Autogenerated by Bloom

* Fri May 23 2025 Aditya Pande <adityapande@intrinsic.ai> - 3.0.0-2
- Autogenerated by Bloom

* Tue May 06 2025 Aditya Pande <adityapande@intrinsic.ai> - 3.0.0-1
- Autogenerated by Bloom

* Fri Mar 21 2025 Aditya Pande <adityapande@intrinsic.ai> - 2.1.6-1
- Autogenerated by Bloom

* Mon Feb 24 2025 Aditya Pande <adityapande@intrinsic.ai> - 2.1.5-1
- Autogenerated by Bloom

* Wed Feb 12 2025 Aditya Pande <adityapande@intrinsic.ai> - 2.1.4-1
- Autogenerated by Bloom

* Tue Jan 14 2025 Aditya Pande <adityapande@intrinsic.ai> - 2.1.3-2
- Autogenerated by Bloom

* Tue Jan 14 2025 Aditya Pande <adityapande@intrinsic.ai> - 2.1.3-1
- Autogenerated by Bloom

* Thu Oct 31 2024 Aditya Pande <adityapande@intrinsic.ai> - 2.1.2-1
- Autogenerated by Bloom

* Mon Oct 14 2024 Aditya Pande <adityapande@intrinsic.ai> - 2.1.1-1
- Autogenerated by Bloom

* Thu Sep 12 2024 Aditya Pande <adityapande@intrinsic.ai> - 2.1.0-1
- Autogenerated by Bloom

* Thu Aug 29 2024 Aditya Pande <adityapande@intrinsic.ai> - 2.0.1-1
- Autogenerated by Bloom

* Mon Jul 22 2024 Aditya Pande <adityapande@intrinsic.ai> - 2.0.0-1
- Autogenerated by Bloom

* Sat Jul 13 2024 Aditya Pande <adityapande@intrinsic.ai> - 1.0.1-2
- Autogenerated by Bloom

* Wed Jul 03 2024 Aditya Pande <adityapande@intrinsic.ai> - 1.0.1-1
- Autogenerated by Bloom

* Wed Apr 24 2024 Aditya Pande <adityapande@intrinsic.ai> - 1.0.0-1
- Autogenerated by Bloom

